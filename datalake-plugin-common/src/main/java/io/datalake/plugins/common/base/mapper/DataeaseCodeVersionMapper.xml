<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.datalake.plugins.common.base.mapper.DatalakeCodeVersionMapper">
  <resultMap id="BaseResultMap" type="io.datalake.plugins.common.base.domain.DatalakeCodeVersion">
    <id column="installed_rank" jdbcType="INTEGER" property="installedRank" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="installed_on" jdbcType="TIMESTAMP" property="installedOn" />
    <result column="success" jdbcType="BIT" property="success" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    installed_rank, description, installed_on, success
  </sql>
  <select id="selectByExample" parameterType="io.datalake.plugins.common.base.domain.DatalakeCodeVersionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from datalake_code_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from datalake_code_version
    where installed_rank = #{installedRank,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from datalake_code_version
    where installed_rank = #{installedRank,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="io.datalake.plugins.common.base.domain.DatalakeCodeVersionExample">
    delete from datalake_code_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.datalake.plugins.common.base.domain.DatalakeCodeVersion">
    insert into datalake_code_version (installed_rank, description, installed_on,
      success)
    values (#{installedRank,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{installedOn,jdbcType=TIMESTAMP}, 
      #{success,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="io.datalake.plugins.common.base.domain.DatalakeCodeVersion">
    insert into datalake_code_version
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="installedRank != null">
        installed_rank,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="installedOn != null">
        installed_on,
      </if>
      <if test="success != null">
        success,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="installedRank != null">
        #{installedRank,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="installedOn != null">
        #{installedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="success != null">
        #{success,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.datalake.plugins.common.base.domain.DatalakeCodeVersionExample" resultType="java.lang.Long">
    select count(*) from datalake_code_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update datalake_code_version
    <set>
      <if test="record.installedRank != null">
        installed_rank = #{record.installedRank,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.installedOn != null">
        installed_on = #{record.installedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.success != null">
        success = #{record.success,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update datalake_code_version
    set installed_rank = #{record.installedRank,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      installed_on = #{record.installedOn,jdbcType=TIMESTAMP},
      success = #{record.success,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.datalake.plugins.common.base.domain.DatalakeCodeVersion">
    update datalake_code_version
    <set>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="installedOn != null">
        installed_on = #{installedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="success != null">
        success = #{success,jdbcType=BIT},
      </if>
    </set>
    where installed_rank = #{installedRank,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.datalake.plugins.common.base.domain.DatalakeCodeVersion">
    update datalake_code_version
    set description = #{description,jdbcType=VARCHAR},
      installed_on = #{installedOn,jdbcType=TIMESTAMP},
      success = #{success,jdbcType=BIT}
    where installed_rank = #{installedRank,jdbcType=INTEGER}
  </update>
</mapper>